<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello World 42</title>
  
  <subtitle>工欲善其事必先利其器</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-02T12:34:45.473Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/06/02/hello-world/"/>
    <id>http://yoursite.com/2019/06/02/hello-world/</id>
    <published>2019-06-02T12:34:45.473Z</published>
    <updated>2019-06-02T12:34:45.473Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>基础</title>
    <link href="http://yoursite.com/2019/06/02/title-test/"/>
    <id>http://yoursite.com/2019/06/02/title-test/</id>
    <published>2019-06-02T11:58:05.223Z</published>
    <updated>2019-06-02T11:58:05.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>启动位置：<code>/usr/local/nginx/sbin/nginx</code><br>-c参数加载指定配置文件,不指定加载默认配置文件</p><p>重载配置：<code>/usr/local/nginx/sbin/nginx -s reload</code><br>停止：<code>/usr/local/nginx/sbin/nginx -s stop</code></p><p>配置文件位置：<code>/usr/local/nginx/conf/nginx.conf</code></p><p>配置多server：配置文件引入多份配置：<code>include vhost/*.conf</code></p><p>基本配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    server_name ***域名（多域名空格隔开）</span><br><span class="line">    index **** #允许加载的默认页面</span><br><span class="line">    root ****#指定的项目路径</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="修改nginx监听不同的php-fpm"><a href="#修改nginx监听不同的php-fpm" class="headerlink" title="修改nginx监听不同的php-fpm"></a>修改nginx监听不同的php-fpm</h2><ul><li>修改php-fpm配置文件：<a href="http://www.conf" target="_blank" rel="noopener">www.conf</a> 文件，listen = 127.0.0.1:9000</li><li>修改nginx配置文件：<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ .php$</span> &#123;</span><br><span class="line">         <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;<span class="comment">#修改处</span></span><br><span class="line">         <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">         <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">         <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Nginx日志分隔"><a href="#Nginx日志分隔" class="headerlink" title="Nginx日志分隔"></a>Nginx日志分隔</h2><p>nginx的日志文件没有rotate功能。编写每天生成一个日志，我们可以写一个nginx日志切割脚本来自动切割日志文件。</p><p>第一步就是重命名日志文件，不用担心重命名后nginx找不到日志文件而丢失日志。在你未重新打开原名字的日志文件前，nginx还是会向你重命名的文件写日志，Linux是靠文件描述符而不是文件名定位文件。</p><p>第二步向nginx主进程发送USR1信号。nginx主进程接到信号后会从配置文件中读取日志文件名称，重新打开日志文件(以配置文件中的日志名称命名)，并以工作进程的用户作为日志文件的所有者。重新打开日志文件后，nginx主进程会关闭重名的日志文件并通知工作进程使用新打开的日志文件。工作进程立刻打开新的日志文件并关闭重名名的日志文件。然后你就可以处理旧的日志文件了。[或者重启nginx服务]。</p><ul><li><p>shell脚本处理</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nginx日志切割脚本</span></span><br><span class="line"><span class="comment">#author: http://www.nginx.cn</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#设置日志文件存放目录</span></span><br><span class="line">logs_path="/usr/local/nginx/logs/"</span><br><span class="line"><span class="comment">#设置pid文件</span></span><br><span class="line">pid_path="/usr/local/nginx/nginx.pid"</span><br><span class="line"></span><br><span class="line"><span class="comment">#重命名日志文件</span></span><br><span class="line"><span class="attribute">mv</span> <span class="variable">$&#123;logs_path&#125;</span>access.log <span class="variable">$&#123;logs_path&#125;</span>access_$(date -d <span class="string">"yesterday"</span> +<span class="string">"%Y%m%d"</span>).log</span><br><span class="line"></span><br><span class="line"><span class="comment">#向nginx主进程发信号重新打开日志</span></span><br><span class="line">kill -USR1 `cat <span class="variable">$&#123;pid_path&#125;</span>`</span><br></pre></td></tr></table></figure></li><li><p>设置定时任务<br><code>0 0 * * * bash /usr/local/nginx/nginx_log.sh</code></p></li></ul><p>这样就每天的0点0分把nginx日志重命名为日期格式，并重新生成今天的新日志文件。</p><h3 id="xdebug"><a href="#xdebug" class="headerlink" title="xdebug"></a>xdebug</h3><p>var_dump显示不完全解决方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xdebug.var_display_max_depth = <span class="number">-1</span> </span><br><span class="line">xdebug.var_display_max_children = <span class="number">-1</span></span><br><span class="line">xdebug.var_display_max_data = <span class="number">-1</span></span><br></pre></td></tr></table></figure></p><h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><p>开启报错：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'display_errors'</span>, <span class="number">1</span>);</span><br><span class="line">error_reporting(E_ALL^E_NOTICE);</span><br></pre></td></tr></table></figure></p><h3 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h3><h4 id="配置文件方式启动"><a href="#配置文件方式启动" class="headerlink" title="配置文件方式启动"></a>配置文件方式启动</h4><ul><li><p>创建配置文件：mongodb.conf</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dbpath=/data/mongodb</span><br><span class="line">logpath=/var/<span class="built_in">log</span>/logconfig.<span class="built_in">log</span></span><br><span class="line">port=<span class="number">27017</span></span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br></pre></td></tr></table></figure></li><li><p>启动<br><code>./mongod -f ./mongodb.conf</code></p></li></ul><h4 id="远程连接失败"><a href="#远程连接失败" class="headerlink" title="远程连接失败"></a>远程连接失败</h4><ul><li>防火墙检查端口</li><li>配置文件追加：<code>bind_ip=0.0.0.0</code></li></ul><h4 id="关闭mongodb方法"><a href="#关闭mongodb方法" class="headerlink" title="关闭mongodb方法"></a>关闭mongodb方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">db.shutdownServer()</span><br></pre></td></tr></table></figure><h3 id="vagrant"><a href="#vagrant" class="headerlink" title="vagrant"></a>vagrant</h3><ul><li><p>添加box</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vagrant init box_name    #指定一个名称,会生成一个配置文件Vagrantfile</span><br><span class="line">vagrant box add box_name centos-7.0-x86_64.box #添加一个box</span><br><span class="line">vagrant up  #启动</span><br><span class="line">vagrant ssh #连接</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件Vagrantfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">config.ssh.username = &quot;root&quot;</span><br><span class="line">config.ssh.password = &quot;vagrant&quot;</span><br><span class="line">#指定虚拟机的ip地址，注意网段要与宿主机的ip网段相同</span><br><span class="line">config.vm.network &quot;public_network&quot;, ip: &quot;192.168.8.128&quot;</span><br><span class="line">#配置挂在文件</span><br><span class="line">config.vm.synced_folder &quot;../workspace&quot;, &quot;/vagrant_data&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>查看内存：<code>cat /proc/meminfo -u</code></p><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><p>NPM是随同NodeJS一起安装的包管理工具，理解：类似composer</p><ul><li><p>默认路径：<code>/usr/local/nodejs/bin/npm</code></p></li><li><p>npm升级到最新版本：<code>npm install npm -g</code><br>不升级可能会导致错误<code>npm ERR! ETXTBSY: text file is busy, rename.....</code></p></li><li><p><code>-g</code>参数表示全局安装</p></li></ul><p>全局安装</p><ol><li>将安装包放在 /usr/local 下或者你 node 的安装目录。</li><li>可以直接在命令行里使用。</li></ol><p>本地安装</p><ol><li>将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li><li>可以通过 require() 来引入本地安装的包。</li></ol><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><p>拼接字符串用CONCAT:<code>CONCAT(&quot;,&quot;, column_name, &quot;,&quot;);</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;nginx&quot;&gt;&lt;a href=&quot;#nginx&quot; class=&quot;headerlink&quot; title=&quot;nginx&quot;&gt;&lt;/a&gt;nginx&lt;/h1&gt;&lt;h2 id=&quot;基本命令&quot;&gt;&lt;a href=&quot;#基本命令&quot; class=&quot;headerlink&quot; title=&quot;基本命令&quot;
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Testing" scheme="http://yoursite.com/tags/Testing/"/>
    
      <category term="Another Tag" scheme="http://yoursite.com/tags/Another-Tag/"/>
    
  </entry>
  
</feed>
